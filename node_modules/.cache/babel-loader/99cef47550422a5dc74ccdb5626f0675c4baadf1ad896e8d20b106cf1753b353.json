{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha Doval\\\\Bootcamp\\\\react-portfolio\\\\src\\\\components\\\\NavTabs.js\";\nimport React from 'react';\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#about\",\n        onClick: () => handlePageChange('About')\n        // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n        // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n        ,\n        className: currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link',\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#about\",\n        onClick: () => handlePageChange('About')\n        // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'About' ? 'nav-link active' : 'nav-link',\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#resume\",\n        onClick: () => handlePageChange('Resume')\n        // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Resume' ? 'nav-link active' : 'nav-link',\n        children: \"Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        onClick: () => handlePageChange('Contact')\n        // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n        ,\n        className: currentPage === 'Contact' ? 'nav-link active' : 'nav-link',\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = NavTabs;\nexport default NavTabs;\nvar _c;\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NavTabs","_ref","currentPage","handlePageChange","className","children","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sasha Doval/Bootcamp/react-portfolio/src/components/NavTabs.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Here we are using object destructuring assignment to pluck off our variables from the props object\r\n// We assign them to their own variable names\r\nfunction NavTabs({ currentPage, handlePageChange }) {\r\n  return (\r\n    <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#about\"\r\n          onClick={() => handlePageChange('About')}\r\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\r\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\r\n          className={currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Portfolio\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#about\"\r\n          onClick={() => handlePageChange('About')}\r\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          About\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#resume\"\r\n          onClick={() => handlePageChange('Resume')}\r\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Blog\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#contact\"\r\n          onClick={() => handlePageChange('Contact')}\r\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Contact\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavTabs;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,WAAW;IAAEC;EAAiB,CAAC,GAAAF,IAAA;EAChD,oBACEF,OAAA;IAAIK,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC1BN,OAAA;MAAIK,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBN,OAAA;QACEO,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,OAAO;QACvC;QACA;QAAA;QACAC,SAAS,EAAEF,WAAW,KAAK,WAAW,GAAG,iBAAiB,GAAG,UAAW;QAAAG,QAAA,EACzE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLZ,OAAA;MAAIK,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBN,OAAA;QACEO,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,OAAO;QACvC;QAAA;QACAC,SAAS,EAAEF,WAAW,KAAK,OAAO,GAAG,iBAAiB,GAAG,UAAW;QAAAG,QAAA,EACrE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLZ,OAAA;MAAIK,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBN,OAAA;QACEO,IAAI,EAAC,SAAS;QACdC,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,QAAQ;QACxC;QAAA;QACAC,SAAS,EAAEF,WAAW,KAAK,QAAQ,GAAG,iBAAiB,GAAG,UAAW;QAAAG,QAAA,EACtE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLZ,OAAA;MAAIK,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBN,OAAA;QACEO,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,SAAS;QACzC;QAAA;QACAC,SAAS,EAAEF,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,UAAW;QAAAG,QAAA,EACvE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET;AAACC,EAAA,GA9CQZ,OAAO;AAgDhB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}